name: wgcf Keygen
on: 
  workflow_dispatch:
    inputs:
      os:
        description: 'Does your device run windows? (y) (leave blank if yours run Android or Linux)'
        options:
          - y'

      WARP_KEY:
        type: string
        description: What is your WARP+ KEY (You can leave blank)

jobs:
  ubuntu-job:
    runs-on: ubuntu-latest
    steps:
    - name: Set OSTYPE if os == y
      if: matrix.os == 'y'
      run: |
        export OSTYPE=win64
        
    - name: Create your profile
      run: |
        wget -q https://github.com/ViRb3/wgcf/releases/download/v2.2.22/wgcf_2.2.22_linux_amd64
        chmod +x wgcf_2.2.22_linux_amd64
        yes | ./wgcf_2.2.22_linux_amd64 register
        if [ -n "${{ github.event.inputs.WARP_KEY }}" ]; then
            sed -i 's/^license_key = .*/license_key = '"'"'${{ github.event.inputs.WARP_KEY }}'"'"'/g' wgcf-account.toml
          fi
        ./wgcf_2.2.22_linux_amd64 update
        ./wgcf_2.2.22_linux_amd64 generate >> info.txt 2>&1

    - name: Upload profile
      uses: actions/upload-artifact@v3
      with:
        name: wgcf
        path: |
          wgcf-account.toml
          wgcf-profile.conf
          info.txt

    - name: Install dependencies
      run: |
        pip install qrcode[pil]
        pip install requests

    - name: Generate QR Code
      run: |
        python -c "
import qrcode
with open('./wgcf-profile.conf', 'r') as file:
    data = file.read()
qr = qrcode.QRCode(
    version=1,
    error_correction=qrcode.constants.ERROR_CORRECT_L,
    box_size=10,
    border=4,
)
qr.add_data(data)
qr.make(fit=True)
img = qr.make_image(fill='black', back_color='white')
img.save('wgcf-qrcode.png')
        "

    - name: Upload QR Code to Imgur
      env:
        IMGUR_CLIENT_ID: 'ae803dfad508935'
        IMGUR_CLIENT_SECRET: '41b63bd83835d9f6321863069f0c7f81007f1cb9'
      run: |
        response=$(curl --location --request POST "https://api.imgur.com/3/image" \
          --header "Authorization: Client-ID $IMGUR_CLIENT_ID" \
          --form "image=@wgcf-qrcode.png")
        echo $response > response.json
        link=$(jq -r '.data.link' response.json)
        echo "QR Code URL: $link"
        echo "::set-output name=qr_link::$link"

    - name: Display QR Code in output
      run: |
        link=$(jq -r '.data.link' response.json)
        echo "![QR Code Image]($link)"

